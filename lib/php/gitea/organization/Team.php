<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace gitea\organization;

use \php\Boot;

/**
 * Represents a team in an organization.
 */
class Team {
	/**
	 * @var bool
	 * Value indicating whether this team can create organization repositories.
	 */
	public $canCreateOrgRepo;
	/**
	 * @var string
	 * The team description.
	 */
	public $description;
	/**
	 * @var int
	 * The team identifier.
	 */
	public $id;
	/**
	 * @var bool
	 * Value indicating whether this team includes all repositories.
	 */
	public $includesAllRepositories;
	/**
	 * @var string
	 * The team name.
	 */
	public $name;
	/**
	 * @var Organization
	 * The team organization.
	 */
	public $organization;
	/**
	 * @var string
	 * The team permission.
	 */
	public $permission;
	/**
	 * @var \Array_hx
	 * The units that this team owns.
	 */
	public $units;

	/**
	 * Creates a new team.
	 * 
	 * @param mixed $data
	 * 
	 * @return void
	 */
	public function __construct ($data = null) {
		$this->units = new \Array_hx();
		$this->permission = "none";
		$this->organization = null;
		$this->name = "";
		$this->includesAllRepositories = false;
		$this->id = -1;
		$this->description = "";
		$this->canCreateOrgRepo = false;
		if ($data !== null) {
			if (\Reflect::hasField($data, "can_create_org_repo") && is_bool(\Reflect::field($data, "can_create_org_repo"))) {
				$this->canCreateOrgRepo = \Reflect::field($data, "can_create_org_repo");
			}
			if (\Reflect::hasField($data, "description") && is_string(\Reflect::field($data, "description"))) {
				$this->description = \Reflect::field($data, "description");
			}
			if (\Reflect::hasField($data, "id") && Boot::isOfType(\Reflect::field($data, "id"), Boot::getClass('Int'))) {
				$this->id = \Reflect::field($data, "id");
			}
			if (\Reflect::hasField($data, "includes_all_repositories") && is_bool(\Reflect::field($data, "includes_all_repositories"))) {
				$this->includesAllRepositories = \Reflect::field($data, "includes_all_repositories");
			}
			if (\Reflect::hasField($data, "name") && is_string(\Reflect::field($data, "name"))) {
				$this->name = \Reflect::field($data, "name");
			}
			if (\Reflect::hasField($data, "organization") && (\Type::typeof(\Reflect::field($data, "organization")) === \ValueType::TObject())) {
				$this->organization = new Organization(\Reflect::field($data, "organization"));
			}
			if (\Reflect::hasField($data, "permission") && is_string(\Reflect::field($data, "permission"))) {
				$this->permission = \Reflect::field($data, "permission");
			}
			if (\Reflect::hasField($data, "units") && (\Reflect::field($data, "units") instanceof \Array_hx)) {
				$this->units = \Reflect::field($data, "units");
			}
		}
	}
}

Boot::registerClass(Team::class, 'gitea.organization.Team');
