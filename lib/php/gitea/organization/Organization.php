<?php
/**
 * Generated by Haxe 4.1.5
 */

namespace gitea\organization;

use \php\Boot;

/**
 * Represents an organization.
 */
class Organization {
	/**
	 * @var string
	 * The URL of the organization's avatar.
	 */
	public $avatarUrl;
	/**
	 * @var string
	 * The organization description.
	 */
	public $description;
	/**
	 * @var string
	 * The full name.
	 */
	public $fullName;
	/**
	 * @var int
	 * The organization identifier.
	 */
	public $id;
	/**
	 * @var string
	 * The organization's location.
	 */
	public $location;
	/**
	 * @var bool
	 * Value indicating whether the repository administrator can change access to teams.
	 */
	public $repoAdminCanChangeTeamAccess;
	/**
	 * @var string
	 * The name of the organization account.
	 */
	public $username;
	/**
	 * @var string
	 * The organization visibility.
	 */
	public $visibility;
	/**
	 * @var string
	 * The URL of the organization's website.
	 */
	public $website;

	/**
	 * Creates a new organization.
	 * 
	 * @param mixed $data
	 * 
	 * @return void
	 */
	public function __construct ($data = null) {
		$this->website = "";
		$this->visibility = "private";
		$this->username = "";
		$this->repoAdminCanChangeTeamAccess = false;
		$this->location = "";
		$this->id = -1;
		$this->fullName = "";
		$this->description = "";
		$this->avatarUrl = "";
		if ($data !== null) {
			if (\Reflect::hasField($data, "avatar_url") && is_string(\Reflect::field($data, "avatar_url"))) {
				$this->avatarUrl = \Reflect::field($data, "avatar_url");
			}
			if (\Reflect::hasField($data, "description") && is_string(\Reflect::field($data, "description"))) {
				$this->description = \Reflect::field($data, "description");
			}
			if (\Reflect::hasField($data, "full_name") && is_string(\Reflect::field($data, "full_name"))) {
				$this->fullName = \Reflect::field($data, "full_name");
			}
			if (\Reflect::hasField($data, "id") && Boot::isOfType(\Reflect::field($data, "id"), Boot::getClass('Int'))) {
				$this->id = \Reflect::field($data, "id");
			}
			if (\Reflect::hasField($data, "location") && is_string(\Reflect::field($data, "location"))) {
				$this->location = \Reflect::field($data, "location");
			}
			if (\Reflect::hasField($data, "repo_admin_change_team_access") && is_bool(\Reflect::field($data, "repo_admin_change_team_access"))) {
				$this->repoAdminCanChangeTeamAccess = \Reflect::field($data, "repo_admin_change_team_access");
			}
			if (\Reflect::hasField($data, "username") && is_string(\Reflect::field($data, "username"))) {
				$this->username = \Reflect::field($data, "username");
			}
			if (\Reflect::hasField($data, "visibility") && is_string(\Reflect::field($data, "visibility"))) {
				$this->visibility = \Reflect::field($data, "visibility");
			}
			if (\Reflect::hasField($data, "website") && is_string(\Reflect::field($data, "website"))) {
				$this->website = \Reflect::field($data, "website");
			}
		}
	}
}

Boot::registerClass(Organization::class, 'gitea.organization.Organization');
