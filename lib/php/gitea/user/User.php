<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace gitea\user;

use \php\Boot;
use \datetime\utils\DateTimeUtils;

/**
 * Represents a Gitea user.
 */
class User {
	/**
	 * @var string
	 * The URL of the user's avatar.
	 */
	public $avatarUrl;
	/**
	 * @var \Date
	 * The creation date.
	 */
	public $created;
	/**
	 * @var string
	 * The mail address.
	 */
	public $email;
	/**
	 * @var string
	 * The full name.
	 */
	public $fullName;
	/**
	 * @var int
	 * The user identifier.
	 */
	public $id;
	/**
	 * @var bool
	 * Value indicating whether this user is an administrator.
	 */
	public $isAdmin;
	/**
	 * @var string
	 * The user locale.
	 */
	public $language;
	/**
	 * @var \Date
	 * The last connection date.
	 */
	public $lastLogin;
	/**
	 * @var string
	 * The name of the user account.
	 */
	public $login;

	/**
	 * Creates a new user from the specified JSON map.
	 * 
	 * @param mixed $map
	 * 
	 * @return User
	 */
	public static function fromJson ($map) {
		$model = new User((\Reflect::hasField($map, "id") && Boot::isOfType(\Reflect::field($map, "id"), Boot::getClass('Int')) ? \Reflect::field($map, "id") : -1));
		if (\Reflect::hasField($map, "avatar_url") && is_string(\Reflect::field($map, "avatar_url"))) {
			$model->avatarUrl = \Reflect::field($map, "avatar_url");
		}
		if (\Reflect::hasField($map, "created") && is_string(\Reflect::field($map, "created"))) {
			$model->created = \Date::fromTime((DateTimeUtils::fromString(\Reflect::field($map, "created")) - 62135596800.0) * 1000);
		}
		if (\Reflect::hasField($map, "email") && is_string(\Reflect::field($map, "email"))) {
			$model->email = \Reflect::field($map, "email");
		}
		if (\Reflect::hasField($map, "full_name") && is_string(\Reflect::field($map, "full_name"))) {
			$model->fullName = \Reflect::field($map, "full_name");
		}
		if (\Reflect::hasField($map, "is_admin") && is_bool(\Reflect::field($map, "is_admin"))) {
			$model->isAdmin = \Reflect::field($map, "is_admin");
		}
		if (\Reflect::hasField($map, "language") && is_string(\Reflect::field($map, "language"))) {
			$model->language = \Reflect::field($map, "language");
		}
		if (\Reflect::hasField($map, "last_login") && is_string(\Reflect::field($map, "last_login"))) {
			$model->lastLogin = \Date::fromTime((DateTimeUtils::fromString(\Reflect::field($map, "last_login")) - 62135596800.0) * 1000);
		}
		if (\Reflect::hasField($map, "login") && is_string(\Reflect::field($map, "login"))) {
			$model->login = \Reflect::field($map, "login");
		}
		return $model;
	}

	/**
	 * Creates a new user.
	 * 
	 * @param int $id
	 * 
	 * @return void
	 */
	public function __construct ($id) {
		$this->login = "";
		$this->lastLogin = null;
		$this->language = "";
		$this->isAdmin = false;
		$this->fullName = "";
		$this->email = "";
		$this->created = null;
		$this->avatarUrl = "";
		$this->id = $id;
	}
}

Boot::registerClass(User::class, 'gitea.user.User');
